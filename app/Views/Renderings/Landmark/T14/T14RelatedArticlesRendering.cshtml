@using Landmark.Classes
@using Landmark.Helper
@using Sitecore.Configuration
@{
    ShoppingHelper helper = new ShoppingHelper();
    var relatedItems = helper.GetRelatedArticles(Sitecore.Context.Item);
    if (relatedItems.Count > 2)
    {
        relatedItems = relatedItems.Take(2).ToList();
    }
}
@if (relatedItems.Count > 0)
{
    <div id="gd-carousel-info" class="carousel slide gd-carousel-info" data-ride="carousel">

        <div class="carousel-heading">
            <h3>@((object)Html.Sitecore().Field("Glossary Value", Factory.GetDatabase("web").GetItem(ItemGuids.RelatedArticleItem)))</h3>
        </div>

        <!-- Wrapper for slides -->
        <div class="carousel-inner" role="listbox">
            @{
    int i = 1;
    foreach (var item in relatedItems)
    {
        <div @if (i == 1) { <text> class="item active" </text>   } else { <text> class="item" </text>   }>
            @{
                var image = LandmarkHelper.GetCallOutImage(item.Item);

                string videoAttrs = "", videoClass = "";
                var videoItem = item.Item.Children.SingleOrDefault(p => p.TemplateID.ToString() == ItemGuids.VideoObject);
                if (videoItem != null)
                {
                    var videoFile = Html.Sitecore().Field("Video File", videoItem);
                    var videoPoster = Html.Sitecore().ImageFieldSrc("Video Poster", videoItem);
                    if (!string.IsNullOrEmpty(videoFile.ToString()) || !string.IsNullOrEmpty(videoPoster))
                    {
                        videoAttrs = "data-lightsrc=\"" + videoItem.Fields["Video File"].Value + "\" data-lighttitle=\"" + PreventCustomReplace(item.Item.Fields["Article Headline"].Value) + "\"  data-lightposter=\"" + image + "\"";
                        videoClass = "gd-lightbox-link gd-lightbox-video";
                    }
                }
            }
            <div class="carousel-image @videoClass" @videoAttrs data-bgsrc="@image"></div>
            <div class="carousel-caption">
                <div class="carousel-caption-inner">
                    <div class="gd-carousel-detail">
                        <h4>@item.Item.Fields["Article Headline"]</h4>
                        <p>@Html.Sitecore().Field("Article Intro", item.Item)</p>
                        <a href="@LandmarkHelper.TranslateUrl(Sitecore.Links.LinkManager.GetItemUrl(item.Item))" class="gd-button gd-button-white" type="button">@((object)Html.Sitecore().Field("Glossary Value", Factory.GetDatabase("web").GetItem(ItemGuids.DiscoverMoreItem)))</a>
                    </div>
                </div>
            </div>
        </div>
i++;
    }
            }
        </div>
        <!-- Wrapper for controls -->
        <div class="carousel-footer">
            <div class="gd-carousel-controls clearfix">
                <!-- Controls -->
                <a class="gd-carousel-control" href="#gd-carousel-info" role="button" data-slide="prev">
                    <span class="icomoon-thin-arrow-L" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <!-- Indicators -->
                <ol class="carousel-indicators gd-carousel-control gd-carousel-no">
                    @{
                        int j = 1;
                        foreach (var item in relatedItems)
                        {
                            <li data-target="#gd-carousel-info" data-slide-to="@(j - 1)" @if (j == 1) { <text> class="active" </text>   }>@j</li>
                    j++;
                        }
                    }
                </ol>
                <span class="gd-carousel-control gd-carousel-no">
                    /
                </span>
                <span class="gd-carousel-control gd-carousel-no">
                    @relatedItems.Count
                </span>
                <a class="gd-carousel-control" href="#gd-carousel-info" role="button" data-slide="next">
                    <span class="icomoon-thin-arrow-R" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
    </div>
}
