@using Landmark.Classes
@using Landmark.Helper
@using Landmark.Models
@using Sitecore.Configuration
@using Sitecore.Data
@using Sitecore.Data.Fields
@using Sitecore.Data.Items
@model RenderingModel
@{
    ShoppingHelper shoppingHelper = new ShoppingHelper();
    var currentItem = Sitecore.Context.Item;
}

<h1>@Html.Sitecore().Field("Brand Title")</h1>
<div class="table-responsive gd-mainimage-table">
    <table>
        <tbody>
            @{
                var openingHour = currentItem.Fields["Opening Hours"].ToString();
                if (!string.IsNullOrEmpty(openingHour))
                {
                    <tr>
                        <th>
                            @Html.Sitecore().Field("Glossary Value", Factory.GetDatabase("web").GetItem(ItemGuids.OpenningHoursItem)).ToString().ToUpper()
                        </th>
                        <td>
                            @Html.Sitecore().Field("Opening Hours")
                        </td>
                    </tr>
                }
            }
            @{
                var contact = currentItem.Fields["Contact"].ToString();
                if (!string.IsNullOrEmpty(contact))
                {
                    <tr>
                        <th>
                            @Html.Sitecore().Field("Glossary Value", Factory.GetDatabase("web").GetItem(ItemGuids.ContactItem)).ToString().ToUpper()
                        </th>
                        <td>@Html.Sitecore().Field("Contact")</td>
                    </tr>
                }
            }
            @{
                var floor = shoppingHelper.GetShopFloor(currentItem);
                var fullWhere = Sitecore.Context.Item.Fields["Address"].Value;
            }
            @if (!string.IsNullOrEmpty(fullWhere))
            {
                    <tr>
                        <th>
                            @Html.Sitecore().Field("Glossary Value", Factory.GetDatabase("web").GetItem(ItemGuids.WhereItem)).ToString().ToUpper()
                        </th>
                        <td>
                            @fullWhere<br>
                            @if (floor != null)
                            {
                                var whereDescription = floor["Floor Title"];
                                <a href="#" class="gd-link-map gd-lightbox-link gd-lightbox-pin" data-pin="@Html.Sitecore().Field("LocationX", Sitecore.Context.Item),@Html.Sitecore().Field("LocationY", Sitecore.Context.Item)" data-lightsrc="@Html.Sitecore().ImageFieldSrc("Floor Image", floor)"
                                   data-lighttitle="@using (BeginPreventCustomReplace()){<text>@Html.Sitecore().Field("Glossary Value", Sitecore.Context.Database.GetItem(ItemGuids.YouAreViewingItem)) @whereDescription @Html.Sitecore().Field("Building Title", floor.Parent)</text>}">
                                    <span class="icomoon-location2"></span> @Html.Sitecore().Field("Glossary Value", Factory.GetDatabase("web").GetItem(ItemGuids.FloorPlanItem)).ToString().ToUpper()
                                </a>
                            }
                        </td>
                    </tr>
            }
        </tbody>
    </table>
</div>
@if (!string.IsNullOrEmpty(currentItem.Fields["Official Website Url"].ToString()))
{
    LinkField link = currentItem.Fields["Official Website Url"];

    <a href="@link.Url" class="gd-link-brief" target="@link.Target">
        @Html.Sitecore().Field("Glossary Value", Factory.GetDatabase("web").GetItem(ItemGuids.OfficialWebsiteItem)).ToString().ToUpper() <span class="icomoon-chevron-small-right"></span>
    </a>
}