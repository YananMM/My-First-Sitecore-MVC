@using Landmark.Classes
@using Landmark.Helper
@using Sitecore.Configuration
@model RenderingModel
@{
    var currentItem = Sitecore.Context.Item;
    MagazineHelper helper = new MagazineHelper();
    var magazinePage = Sitecore.Context.Database.GetItem(ItemGuids.LandmarkMaganizePage);
    var magazineCategories = helper.GetAllMaganizeCategories(magazinePage);
}

<div class="gd-pagetitle-menu hidden-xs">
    <a href="@LandmarkHelper.TranslateUrl(Sitecore.Links.LinkManager.GetItemUrl(Sitecore.Context.Database.GetItem(ItemGuids.LandmarkMaganizePage)))" @if (currentItem.ID.ToString() == ItemGuids.LandmarkMaganizePage) { <text> class="active" </text>         }>
        @{
            var magezineItem = Factory.GetDatabase("web").GetItem(ItemGuids.MagezineItem);
        }
        @Html.Sitecore().Field("Glossary Value", magezineItem)
    </a>
    @foreach (var item in magazineCategories)
    {
        <span class="gd-pagetitle-menu-gap">|</span>
        <a href="@LandmarkHelper.TranslateUrl(Sitecore.Links.LinkManager.GetItemUrl(item))" @if (currentItem.Parent.ID == item.ID || currentItem.ID == item.ID) { <text> class="active" </text>        }>@item.Fields["Category Name"].ToString().ToUpper()</a>
    }
</div>

<div class="gd-controls-m visible-xs">
    <select class="form-control">
        <option value="@LandmarkHelper.TranslateUrl(Sitecore.Links.LinkManager.GetItemUrl(Sitecore.Context.Database.GetItem(ItemGuids.LandmarkMaganizePage)))">@Html.Sitecore().Field("Glossary Value", magezineItem)</option>
        @foreach (var item in magazineCategories)
        {
            <option value="@LandmarkHelper.TranslateUrl(Sitecore.Links.LinkManager.GetItemUrl(item))" @if (currentItem.Parent.ID == item.ID || currentItem.ID == item.ID) { <text> selected="selected" </text>          }>@item.Fields["Category Name"].ToString().ToUpper()</option>
        }
    </select>
</div>