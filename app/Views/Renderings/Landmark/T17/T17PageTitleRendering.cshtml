@using Landmark.Classes
@using Landmark.Helper
@using Sitecore.Data.Fields
@using Sitecore.Data.Items
@using Landmark.Models
@model RenderingModel
@{
    var currentItem = Sitecore.Context.Item;
    var parentItem = currentItem.Parent;

}
<div class="gd-pagetitle-heading">
    <h1>@Html.Sitecore().Field("Page Title", parentItem).ToString().ToUpper()</h1>
</div>

<div class="gd-pagetitle-menu hidden-xs">
    @{
        int i = 1;
        foreach (var item in parentItem.Children.ToList())
        {
            <a href="@LandmarkHelper.TranslateUrl(Sitecore.Links.LinkManager.GetItemUrl(item))" @if (currentItem.ID.ToString() == item.ID.ToString()) { <text>
               class="active"
               </text>        }>@Html.Sitecore().Field("Page Title", item).ToString().ToUpper()</a>
            if (i != parentItem.Children.Count)
            {
                <span class="gd-pagetitle-menu-gap">|</span>
            }
            i++;
        }
    }
</div>

<div class="gd-controls-m visible-xs">
    <select class="form-control">
        @foreach (var item in parentItem.Children.ToList())
        {
            <option value="@LandmarkHelper.TranslateUrl(Sitecore.Links.LinkManager.GetItemUrl(item))" @if (currentItem.ID.ToString() == item.ID.ToString()) { <text>
                    selected="selected"
                    </text>         }>
                @Html.Sitecore().Field("Page Title", item).ToString().ToUpper()
            </option>
        }
    </select>
</div>
